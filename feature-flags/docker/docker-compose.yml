services:


  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
#      - ./postgresql/postgres-data:/var/lib/postgresql/data
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--username=postgres",
          "--host=127.0.0.1",
          "--port=5432"
        ]
      interval: 2s
      timeout: 1m
      retries: 5
      start_period: 10s


  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"

  unleash:
    image: unleashorg/unleash-server:latest
    hostname: unleash
    ports:
      - "4242:4242"
    environment:
      # This points Unleash to its backing database (defined in the `db` section below)
      # DATABASE_URL: postgres://unleash:password@postgres:5432/unleash
      # Disable SSL for database connections. @chriswk: why do we do this?
      DATABASE_SSL: "false"
      DATABASE_USERNAME: "unleash"
      DATABASE_PASSWORD: "unleash"
      DATABASE_NAME: "unleash"
      DATABASE_HOST: "postgres"
      DATABASE_PORT: "5432"
      DATABASE_SCHEMA: "unleash"
      # Changing log levels:
      LOG_LEVEL: "debug"
      # Proxy clients must use one of these keys to connect to the
      # Proxy. To add more keys, separate them with a comma (`key1,key2`).
      INIT_FRONTEND_API_TOKENS: "default:development.unleash-insecure-frontend-api-token"
      # Initialize Unleash with a default set of client API tokens. To
      # initialize Unleash with multiple tokens, separate them with a
      # comma (`token1,token2`).
      INIT_CLIENT_API_TOKENS: "default:development.unleash-insecure-api-token"
    depends_on:
      postgres:
        condition: service_healthy
    command: [ "node", "index.js" ]
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
      interval: 1s
      timeout: 1m
      retries: 5
      start_period: 15s